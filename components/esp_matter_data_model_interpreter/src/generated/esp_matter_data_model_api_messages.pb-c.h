/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: esp_matter_data_model_api_messages.proto */

#ifndef PROTOBUF_C_esp_5fmatter_5fdata_5fmodel_5fapi_5fmessages_2eproto__INCLUDED
#define PROTOBUF_C_esp_5fmatter_5fdata_5fmodel_5fapi_5fmessages_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1000000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1005000 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif


typedef struct Datamodel__EspMatterVal Datamodel__EspMatterVal;
typedef struct Datamodel__EspMatterArray Datamodel__EspMatterArray;
typedef struct Datamodel__EspMatterAttrVal Datamodel__EspMatterAttrVal;
typedef struct Datamodel__CreateAttributeParams Datamodel__CreateAttributeParams;
typedef struct Datamodel__CreateCommandParams Datamodel__CreateCommandParams;
typedef struct Datamodel__CreateEventParams Datamodel__CreateEventParams;
typedef struct Datamodel__CreateClusterParams Datamodel__CreateClusterParams;
typedef struct Datamodel__CreateEndpointParams Datamodel__CreateEndpointParams;
typedef struct Datamodel__EndpointAddDeviceTypeParams Datamodel__EndpointAddDeviceTypeParams;
typedef struct Datamodel__FunctionCall Datamodel__FunctionCall;


/* --- enums --- */

typedef enum _Datamodel__FunctionCall__FunctionType {
  DATAMODEL__FUNCTION_CALL__FUNCTION_TYPE__CREATE_ATTRIBUTE = 1,
  DATAMODEL__FUNCTION_CALL__FUNCTION_TYPE__CREATE_COMMAND = 2,
  DATAMODEL__FUNCTION_CALL__FUNCTION_TYPE__CREATE_EVENT = 3,
  DATAMODEL__FUNCTION_CALL__FUNCTION_TYPE__CREATE_CLUSTER = 4,
  DATAMODEL__FUNCTION_CALL__FUNCTION_TYPE__CREATE_ENDPOINT = 5,
  DATAMODEL__FUNCTION_CALL__FUNCTION_TYPE__ENDPOINT_ADD_DEVICE_TYPE = 6
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(DATAMODEL__FUNCTION_CALL__FUNCTION_TYPE)
} Datamodel__FunctionCall__FunctionType;
/*
 * Enumeration for esp_matter_val_type_t
 */
typedef enum _Datamodel__EspMatterValType {
  DATAMODEL__ESP_MATTER_VAL_TYPE__ESP_MATTER_VAL_TYPE_INVALID = 0,
  DATAMODEL__ESP_MATTER_VAL_TYPE__ESP_MATTER_VAL_TYPE_BOOLEAN = 1,
  DATAMODEL__ESP_MATTER_VAL_TYPE__ESP_MATTER_VAL_TYPE_INTEGER = 2,
  DATAMODEL__ESP_MATTER_VAL_TYPE__ESP_MATTER_VAL_TYPE_FLOAT = 3,
  DATAMODEL__ESP_MATTER_VAL_TYPE__ESP_MATTER_VAL_TYPE_ARRAY = 4,
  DATAMODEL__ESP_MATTER_VAL_TYPE__ESP_MATTER_VAL_TYPE_CHAR_STRING = 5,
  DATAMODEL__ESP_MATTER_VAL_TYPE__ESP_MATTER_VAL_TYPE_OCTET_STRING = 6,
  DATAMODEL__ESP_MATTER_VAL_TYPE__ESP_MATTER_VAL_TYPE_INT8 = 7,
  DATAMODEL__ESP_MATTER_VAL_TYPE__ESP_MATTER_VAL_TYPE_UINT8 = 8,
  DATAMODEL__ESP_MATTER_VAL_TYPE__ESP_MATTER_VAL_TYPE_INT16 = 9,
  DATAMODEL__ESP_MATTER_VAL_TYPE__ESP_MATTER_VAL_TYPE_UINT16 = 10,
  DATAMODEL__ESP_MATTER_VAL_TYPE__ESP_MATTER_VAL_TYPE_INT32 = 11,
  DATAMODEL__ESP_MATTER_VAL_TYPE__ESP_MATTER_VAL_TYPE_UINT32 = 12,
  DATAMODEL__ESP_MATTER_VAL_TYPE__ESP_MATTER_VAL_TYPE_INT64 = 13,
  DATAMODEL__ESP_MATTER_VAL_TYPE__ESP_MATTER_VAL_TYPE_UINT64 = 14,
  DATAMODEL__ESP_MATTER_VAL_TYPE__ESP_MATTER_VAL_TYPE_ENUM8 = 15,
  DATAMODEL__ESP_MATTER_VAL_TYPE__ESP_MATTER_VAL_TYPE_BITMAP8 = 16,
  DATAMODEL__ESP_MATTER_VAL_TYPE__ESP_MATTER_VAL_TYPE_BITMAP16 = 17,
  DATAMODEL__ESP_MATTER_VAL_TYPE__ESP_MATTER_VAL_TYPE_BITMAP32 = 18,
  DATAMODEL__ESP_MATTER_VAL_TYPE__ESP_MATTER_VAL_TYPE_ENUM16 = 19,
  DATAMODEL__ESP_MATTER_VAL_TYPE__ESP_MATTER_VAL_TYPE_LONG_CHAR_STRING = 20,
  DATAMODEL__ESP_MATTER_VAL_TYPE__ESP_MATTER_VAL_TYPE_LONG_OCTET_STRING = 21
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(DATAMODEL__ESP_MATTER_VAL_TYPE)
} Datamodel__EspMatterValType;

/* --- messages --- */

typedef enum {
  DATAMODEL__ESP_MATTER_VAL__VALUE__NOT_SET = 0,
  DATAMODEL__ESP_MATTER_VAL__VALUE_B = 1,
  DATAMODEL__ESP_MATTER_VAL__VALUE_I = 2,
  DATAMODEL__ESP_MATTER_VAL__VALUE_F = 3,
  DATAMODEL__ESP_MATTER_VAL__VALUE_I8 = 4,
  DATAMODEL__ESP_MATTER_VAL__VALUE_U8 = 5,
  DATAMODEL__ESP_MATTER_VAL__VALUE_I16 = 6,
  DATAMODEL__ESP_MATTER_VAL__VALUE_U16 = 7,
  DATAMODEL__ESP_MATTER_VAL__VALUE_I32 = 8,
  DATAMODEL__ESP_MATTER_VAL__VALUE_U32 = 9,
  DATAMODEL__ESP_MATTER_VAL__VALUE_I64 = 10,
  DATAMODEL__ESP_MATTER_VAL__VALUE_U64 = 11,
  DATAMODEL__ESP_MATTER_VAL__VALUE_A = 12,
  DATAMODEL__ESP_MATTER_VAL__VALUE_CHAR_STRING = 13,
  DATAMODEL__ESP_MATTER_VAL__VALUE_OCTET_STRING = 14
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(DATAMODEL__ESP_MATTER_VAL__VALUE__CASE)
} Datamodel__EspMatterVal__ValueCase;

/*
 * Protobuf equivalent for the esp_matter_val_t union
 */
struct  Datamodel__EspMatterVal
{
  ProtobufCMessage base;
  Datamodel__EspMatterVal__ValueCase value_case;
  union {
    protobuf_c_boolean b;
    int32_t i;
    float f;
    int32_t i8;
    uint32_t u8;
    int32_t i16;
    uint32_t u16;
    int32_t i32;
    uint32_t u32;
    int64_t i64;
    uint64_t u64;
    /*
     * Array structure
     */
    Datamodel__EspMatterArray *a;
    char *char_string;
    ProtobufCBinaryData octet_string;
  };
};
#define DATAMODEL__ESP_MATTER_VAL__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&datamodel__esp_matter_val__descriptor) \
, DATAMODEL__ESP_MATTER_VAL__VALUE__NOT_SET, {0} }


/*
 * Message to represent an array
 */
struct  Datamodel__EspMatterArray
{
  ProtobufCMessage base;
  /*
   * Represent array data as bytes
   */
  protobuf_c_boolean has_elements;
  ProtobufCBinaryData elements;
  /*
   * Data size
   */
  protobuf_c_boolean has_s;
  uint32_t s;
  /*
   * Data count
   */
  protobuf_c_boolean has_n;
  uint32_t n;
  /*
   * Total size
   */
  protobuf_c_boolean has_t;
  uint32_t t;
};
#define DATAMODEL__ESP_MATTER_ARRAY__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&datamodel__esp_matter_array__descriptor) \
, 0, {0,NULL}, 0, 0, 0, 0, 0, 0 }


/*
 * Structure representing esp_matter_attr_val_t
 */
struct  Datamodel__EspMatterAttrVal
{
  ProtobufCMessage base;
  protobuf_c_boolean has_type;
  Datamodel__EspMatterValType type;
  Datamodel__EspMatterVal *val;
};
#define DATAMODEL__ESP_MATTER_ATTR_VAL__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&datamodel__esp_matter_attr_val__descriptor) \
, 0, DATAMODEL__ESP_MATTER_VAL_TYPE__ESP_MATTER_VAL_TYPE_INVALID, NULL }


/*
 * Modify CreateAttributeParams message to include EspMatterAttrVal
 */
struct  Datamodel__CreateAttributeParams
{
  ProtobufCMessage base;
  protobuf_c_boolean has_endpoint_id;
  uint32_t endpoint_id;
  protobuf_c_boolean has_cluster_id;
  uint32_t cluster_id;
  protobuf_c_boolean has_attribute_id;
  uint32_t attribute_id;
  protobuf_c_boolean has_flags;
  uint32_t flags;
  Datamodel__EspMatterAttrVal *val;
  protobuf_c_boolean has_max_val_size;
  uint32_t max_val_size;
  Datamodel__EspMatterVal *bounds_min;
  Datamodel__EspMatterVal *bounds_max;
};
#define DATAMODEL__CREATE_ATTRIBUTE_PARAMS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&datamodel__create_attribute_params__descriptor) \
, 0, 0, 0, 0, 0, 0, 0, 0, NULL, 0, 0, NULL, NULL }


struct  Datamodel__CreateCommandParams
{
  ProtobufCMessage base;
  protobuf_c_boolean has_endpoint_id;
  uint32_t endpoint_id;
  protobuf_c_boolean has_cluster_id;
  uint32_t cluster_id;
  protobuf_c_boolean has_command_id;
  uint32_t command_id;
  /*
   * Callbacks cannot be serialized directly.
   * Create an enum or identifier that can be mapped back
   * to a callback in the application
   * optional Callback callback = 5;
   */
  protobuf_c_boolean has_flags;
  uint32_t flags;
};
#define DATAMODEL__CREATE_COMMAND_PARAMS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&datamodel__create_command_params__descriptor) \
, 0, 0, 0, 0, 0, 0, 0, 0 }


struct  Datamodel__CreateEventParams
{
  ProtobufCMessage base;
  protobuf_c_boolean has_endpoint_id;
  uint32_t endpoint_id;
  protobuf_c_boolean has_cluster_id;
  uint32_t cluster_id;
  protobuf_c_boolean has_event_id;
  uint32_t event_id;
};
#define DATAMODEL__CREATE_EVENT_PARAMS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&datamodel__create_event_params__descriptor) \
, 0, 0, 0, 0, 0, 0 }


struct  Datamodel__CreateClusterParams
{
  ProtobufCMessage base;
  protobuf_c_boolean has_endpoint_id;
  uint32_t endpoint_id;
  protobuf_c_boolean has_cluster_id;
  uint32_t cluster_id;
  protobuf_c_boolean has_flags;
  uint32_t flags;
};
#define DATAMODEL__CREATE_CLUSTER_PARAMS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&datamodel__create_cluster_params__descriptor) \
, 0, 0, 0, 0, 0, 0 }


struct  Datamodel__CreateEndpointParams
{
  ProtobufCMessage base;
  protobuf_c_boolean has_endpoint_id;
  uint32_t endpoint_id;
  /*
   * optional bytes priv_data = 3; // Not needed as of now
   */
  protobuf_c_boolean has_flags;
  uint32_t flags;
};
#define DATAMODEL__CREATE_ENDPOINT_PARAMS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&datamodel__create_endpoint_params__descriptor) \
, 0, 0, 0, 0 }


struct  Datamodel__EndpointAddDeviceTypeParams
{
  ProtobufCMessage base;
  protobuf_c_boolean has_endpoint_id;
  uint32_t endpoint_id;
  protobuf_c_boolean has_device_type_id;
  uint32_t device_type_id;
  protobuf_c_boolean has_device_type_version;
  uint32_t device_type_version;
};
#define DATAMODEL__ENDPOINT_ADD_DEVICE_TYPE_PARAMS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&datamodel__endpoint_add_device_type_params__descriptor) \
, 0, 0, 0, 0, 0, 0 }


typedef enum {
  DATAMODEL__FUNCTION_CALL__PARAMS__NOT_SET = 0,
  DATAMODEL__FUNCTION_CALL__PARAMS_CREATE_ATTRIBUTE_PARAMS = 2,
  DATAMODEL__FUNCTION_CALL__PARAMS_CREATE_COMMAND_PARAMS = 3,
  DATAMODEL__FUNCTION_CALL__PARAMS_CREATE_EVENT_PARAMS = 4,
  DATAMODEL__FUNCTION_CALL__PARAMS_CREATE_CLUSTER_PARAMS = 5,
  DATAMODEL__FUNCTION_CALL__PARAMS_CREATE_ENDPOINT_PARAMS = 6,
  DATAMODEL__FUNCTION_CALL__PARAMS_ENDPOINT_ADD_DEVICE_TYPE_PARAMS = 7
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(DATAMODEL__FUNCTION_CALL__PARAMS__CASE)
} Datamodel__FunctionCall__ParamsCase;

/*
 * Wrapper message to encapsulate function calls
 */
struct  Datamodel__FunctionCall
{
  ProtobufCMessage base;
  protobuf_c_boolean has_function;
  Datamodel__FunctionCall__FunctionType function;
  Datamodel__FunctionCall__ParamsCase params_case;
  union {
    Datamodel__CreateAttributeParams *create_attribute_params;
    Datamodel__CreateCommandParams *create_command_params;
    Datamodel__CreateEventParams *create_event_params;
    Datamodel__CreateClusterParams *create_cluster_params;
    Datamodel__CreateEndpointParams *create_endpoint_params;
    Datamodel__EndpointAddDeviceTypeParams *endpoint_add_device_type_params;
  };
};
#define DATAMODEL__FUNCTION_CALL__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&datamodel__function_call__descriptor) \
, 0, DATAMODEL__FUNCTION_CALL__FUNCTION_TYPE__CREATE_ATTRIBUTE, DATAMODEL__FUNCTION_CALL__PARAMS__NOT_SET, {0} }


/* Datamodel__EspMatterVal methods */
void   datamodel__esp_matter_val__init
                     (Datamodel__EspMatterVal         *message);
size_t datamodel__esp_matter_val__get_packed_size
                     (const Datamodel__EspMatterVal   *message);
size_t datamodel__esp_matter_val__pack
                     (const Datamodel__EspMatterVal   *message,
                      uint8_t             *out);
size_t datamodel__esp_matter_val__pack_to_buffer
                     (const Datamodel__EspMatterVal   *message,
                      ProtobufCBuffer     *buffer);
Datamodel__EspMatterVal *
       datamodel__esp_matter_val__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   datamodel__esp_matter_val__free_unpacked
                     (Datamodel__EspMatterVal *message,
                      ProtobufCAllocator *allocator);
/* Datamodel__EspMatterArray methods */
void   datamodel__esp_matter_array__init
                     (Datamodel__EspMatterArray         *message);
size_t datamodel__esp_matter_array__get_packed_size
                     (const Datamodel__EspMatterArray   *message);
size_t datamodel__esp_matter_array__pack
                     (const Datamodel__EspMatterArray   *message,
                      uint8_t             *out);
size_t datamodel__esp_matter_array__pack_to_buffer
                     (const Datamodel__EspMatterArray   *message,
                      ProtobufCBuffer     *buffer);
Datamodel__EspMatterArray *
       datamodel__esp_matter_array__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   datamodel__esp_matter_array__free_unpacked
                     (Datamodel__EspMatterArray *message,
                      ProtobufCAllocator *allocator);
/* Datamodel__EspMatterAttrVal methods */
void   datamodel__esp_matter_attr_val__init
                     (Datamodel__EspMatterAttrVal         *message);
size_t datamodel__esp_matter_attr_val__get_packed_size
                     (const Datamodel__EspMatterAttrVal   *message);
size_t datamodel__esp_matter_attr_val__pack
                     (const Datamodel__EspMatterAttrVal   *message,
                      uint8_t             *out);
size_t datamodel__esp_matter_attr_val__pack_to_buffer
                     (const Datamodel__EspMatterAttrVal   *message,
                      ProtobufCBuffer     *buffer);
Datamodel__EspMatterAttrVal *
       datamodel__esp_matter_attr_val__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   datamodel__esp_matter_attr_val__free_unpacked
                     (Datamodel__EspMatterAttrVal *message,
                      ProtobufCAllocator *allocator);
/* Datamodel__CreateAttributeParams methods */
void   datamodel__create_attribute_params__init
                     (Datamodel__CreateAttributeParams         *message);
size_t datamodel__create_attribute_params__get_packed_size
                     (const Datamodel__CreateAttributeParams   *message);
size_t datamodel__create_attribute_params__pack
                     (const Datamodel__CreateAttributeParams   *message,
                      uint8_t             *out);
size_t datamodel__create_attribute_params__pack_to_buffer
                     (const Datamodel__CreateAttributeParams   *message,
                      ProtobufCBuffer     *buffer);
Datamodel__CreateAttributeParams *
       datamodel__create_attribute_params__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   datamodel__create_attribute_params__free_unpacked
                     (Datamodel__CreateAttributeParams *message,
                      ProtobufCAllocator *allocator);
/* Datamodel__CreateCommandParams methods */
void   datamodel__create_command_params__init
                     (Datamodel__CreateCommandParams         *message);
size_t datamodel__create_command_params__get_packed_size
                     (const Datamodel__CreateCommandParams   *message);
size_t datamodel__create_command_params__pack
                     (const Datamodel__CreateCommandParams   *message,
                      uint8_t             *out);
size_t datamodel__create_command_params__pack_to_buffer
                     (const Datamodel__CreateCommandParams   *message,
                      ProtobufCBuffer     *buffer);
Datamodel__CreateCommandParams *
       datamodel__create_command_params__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   datamodel__create_command_params__free_unpacked
                     (Datamodel__CreateCommandParams *message,
                      ProtobufCAllocator *allocator);
/* Datamodel__CreateEventParams methods */
void   datamodel__create_event_params__init
                     (Datamodel__CreateEventParams         *message);
size_t datamodel__create_event_params__get_packed_size
                     (const Datamodel__CreateEventParams   *message);
size_t datamodel__create_event_params__pack
                     (const Datamodel__CreateEventParams   *message,
                      uint8_t             *out);
size_t datamodel__create_event_params__pack_to_buffer
                     (const Datamodel__CreateEventParams   *message,
                      ProtobufCBuffer     *buffer);
Datamodel__CreateEventParams *
       datamodel__create_event_params__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   datamodel__create_event_params__free_unpacked
                     (Datamodel__CreateEventParams *message,
                      ProtobufCAllocator *allocator);
/* Datamodel__CreateClusterParams methods */
void   datamodel__create_cluster_params__init
                     (Datamodel__CreateClusterParams         *message);
size_t datamodel__create_cluster_params__get_packed_size
                     (const Datamodel__CreateClusterParams   *message);
size_t datamodel__create_cluster_params__pack
                     (const Datamodel__CreateClusterParams   *message,
                      uint8_t             *out);
size_t datamodel__create_cluster_params__pack_to_buffer
                     (const Datamodel__CreateClusterParams   *message,
                      ProtobufCBuffer     *buffer);
Datamodel__CreateClusterParams *
       datamodel__create_cluster_params__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   datamodel__create_cluster_params__free_unpacked
                     (Datamodel__CreateClusterParams *message,
                      ProtobufCAllocator *allocator);
/* Datamodel__CreateEndpointParams methods */
void   datamodel__create_endpoint_params__init
                     (Datamodel__CreateEndpointParams         *message);
size_t datamodel__create_endpoint_params__get_packed_size
                     (const Datamodel__CreateEndpointParams   *message);
size_t datamodel__create_endpoint_params__pack
                     (const Datamodel__CreateEndpointParams   *message,
                      uint8_t             *out);
size_t datamodel__create_endpoint_params__pack_to_buffer
                     (const Datamodel__CreateEndpointParams   *message,
                      ProtobufCBuffer     *buffer);
Datamodel__CreateEndpointParams *
       datamodel__create_endpoint_params__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   datamodel__create_endpoint_params__free_unpacked
                     (Datamodel__CreateEndpointParams *message,
                      ProtobufCAllocator *allocator);
/* Datamodel__EndpointAddDeviceTypeParams methods */
void   datamodel__endpoint_add_device_type_params__init
                     (Datamodel__EndpointAddDeviceTypeParams         *message);
size_t datamodel__endpoint_add_device_type_params__get_packed_size
                     (const Datamodel__EndpointAddDeviceTypeParams   *message);
size_t datamodel__endpoint_add_device_type_params__pack
                     (const Datamodel__EndpointAddDeviceTypeParams   *message,
                      uint8_t             *out);
size_t datamodel__endpoint_add_device_type_params__pack_to_buffer
                     (const Datamodel__EndpointAddDeviceTypeParams   *message,
                      ProtobufCBuffer     *buffer);
Datamodel__EndpointAddDeviceTypeParams *
       datamodel__endpoint_add_device_type_params__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   datamodel__endpoint_add_device_type_params__free_unpacked
                     (Datamodel__EndpointAddDeviceTypeParams *message,
                      ProtobufCAllocator *allocator);
/* Datamodel__FunctionCall methods */
void   datamodel__function_call__init
                     (Datamodel__FunctionCall         *message);
size_t datamodel__function_call__get_packed_size
                     (const Datamodel__FunctionCall   *message);
size_t datamodel__function_call__pack
                     (const Datamodel__FunctionCall   *message,
                      uint8_t             *out);
size_t datamodel__function_call__pack_to_buffer
                     (const Datamodel__FunctionCall   *message,
                      ProtobufCBuffer     *buffer);
Datamodel__FunctionCall *
       datamodel__function_call__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   datamodel__function_call__free_unpacked
                     (Datamodel__FunctionCall *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*Datamodel__EspMatterVal_Closure)
                 (const Datamodel__EspMatterVal *message,
                  void *closure_data);
typedef void (*Datamodel__EspMatterArray_Closure)
                 (const Datamodel__EspMatterArray *message,
                  void *closure_data);
typedef void (*Datamodel__EspMatterAttrVal_Closure)
                 (const Datamodel__EspMatterAttrVal *message,
                  void *closure_data);
typedef void (*Datamodel__CreateAttributeParams_Closure)
                 (const Datamodel__CreateAttributeParams *message,
                  void *closure_data);
typedef void (*Datamodel__CreateCommandParams_Closure)
                 (const Datamodel__CreateCommandParams *message,
                  void *closure_data);
typedef void (*Datamodel__CreateEventParams_Closure)
                 (const Datamodel__CreateEventParams *message,
                  void *closure_data);
typedef void (*Datamodel__CreateClusterParams_Closure)
                 (const Datamodel__CreateClusterParams *message,
                  void *closure_data);
typedef void (*Datamodel__CreateEndpointParams_Closure)
                 (const Datamodel__CreateEndpointParams *message,
                  void *closure_data);
typedef void (*Datamodel__EndpointAddDeviceTypeParams_Closure)
                 (const Datamodel__EndpointAddDeviceTypeParams *message,
                  void *closure_data);
typedef void (*Datamodel__FunctionCall_Closure)
                 (const Datamodel__FunctionCall *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCEnumDescriptor    datamodel__esp_matter_val_type__descriptor;
extern const ProtobufCMessageDescriptor datamodel__esp_matter_val__descriptor;
extern const ProtobufCMessageDescriptor datamodel__esp_matter_array__descriptor;
extern const ProtobufCMessageDescriptor datamodel__esp_matter_attr_val__descriptor;
extern const ProtobufCMessageDescriptor datamodel__create_attribute_params__descriptor;
extern const ProtobufCMessageDescriptor datamodel__create_command_params__descriptor;
extern const ProtobufCMessageDescriptor datamodel__create_event_params__descriptor;
extern const ProtobufCMessageDescriptor datamodel__create_cluster_params__descriptor;
extern const ProtobufCMessageDescriptor datamodel__create_endpoint_params__descriptor;
extern const ProtobufCMessageDescriptor datamodel__endpoint_add_device_type_params__descriptor;
extern const ProtobufCMessageDescriptor datamodel__function_call__descriptor;
extern const ProtobufCEnumDescriptor    datamodel__function_call__function_type__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_esp_5fmatter_5fdata_5fmodel_5fapi_5fmessages_2eproto__INCLUDED */
